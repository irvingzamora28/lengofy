name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      seed:
        description: 'Run database seeding'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "."
          target: "/var/www/html"
          rm: true

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          timeout: 60s
          script: |
            cd /var/www/html

            # Copy .env.example to .env if it doesn't exist
            if [ ! -f .env ]; then
              echo "Creating .env file from .env.example"
              cp .env.example .env
            fi

            # Update environment variables
            sed -i "s#^DB_CONNECTION=.*#DB_CONNECTION=${{ secrets.DB_CONNECTION }}#" .env
            sed -i "s#^DB_HOST=.*#DB_HOST=${{ secrets.DB_HOST }}#" .env
            sed -i "s#^DB_PORT=.*#DB_PORT=${{ secrets.DB_PORT }}#" .env
            sed -i "s#^DB_DATABASE=.*#DB_DATABASE=${{ secrets.DB_DATABASE }}#" .env
            sed -i "s#^DB_USERNAME=.*#DB_USERNAME=${{ secrets.DB_USERNAME }}#" .env
            sed -i "s#^DB_PASSWORD=.*#DB_PASSWORD=${{ secrets.DB_PASSWORD }}#" .env
            sed -i "s#^APP_NAME=.*#APP_NAME=${{ secrets.APP_NAME }}#" .env
            sed -i "s#^APP_ENV=.*#APP_ENV=production#" .env
            sed -i "s#^APP_DEBUG=.*#APP_DEBUG=false#" .env
            sed -i "s#^APP_URL=.*#APP_URL=${{ secrets.APP_URL }}#" .env
            sed -i "s#^WEBSOCKET_GAME_ENDPOINT=.*#WEBSOCKET_GAME_ENDPOINT=${{ secrets.WEBSOCKET_GAME_ENDPOINT }}#" .env

            # Set proper permissions for .env file
            sudo chmod 666 .env

            # Set proper ownership and permissions
            sudo chown -R www-data:www-data .
            sudo find . -type f -exec chmod 644 {} \;
            sudo find . -type d -exec chmod 755 {} \;
            sudo chmod -R 775 storage bootstrap/cache

            # Build and start containers
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml up -d

            # Wait for containers to be ready
            sleep 20

            # Run Laravel commands
            docker exec -u www-data lengofy-app composer install --no-dev --optimize-autoloader

            # Only generate key if it doesn't exist in .env (Check for empty value)
            if grep -q "^APP_KEY=" .env && [ -z "$(grep "^APP_KEY=" .env | cut -d '=' -f2)" ]; then
              docker exec -u www-data lengofy-app php artisan key:generate
            fi

            # Run migrations (--force to run in production)
            docker exec -u www-data lengofy-app php artisan migrate --force

            # Only run seeding if explicitly requested
            if [ "${{ github.event.inputs.seed }}" = "true" ]; then
              docker exec -u www-data lengofy-app php artisan db:seed --force
              echo "Database seeding completed"
            fi

            # Cache everything
            docker exec -u www-data lengofy-app php artisan config:cache
            docker exec -u www-data lengofy-app php artisan route:cache
            docker exec -u www-data lengofy-app php artisan view:cache
            docker exec -u www-data lengofy-app php artisan storage:link
