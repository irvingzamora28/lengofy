name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      seed:
        description: 'Run database seeding'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "."
          target: "/var/www/lengofy"
          rm: true
          timeout: 60s
          debug: true

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          timeout: 60s
          debug: true
          script: |
            cd /var/www/lengofy

            # Set proper ownership and permissions
            sudo chown -R www-data:www-data .
            sudo find . -type f -exec chmod 644 {} \;
            sudo find . -type d -exec chmod 755 {} \;
            sudo chmod -R 775 storage bootstrap/cache

            # Copy .env.example to .env if not exists
            [ ! -f .env ] && cp .env.example .env

            # Build and start containers
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml up -d

            # Wait for containers to be ready
            sleep 20

            # Run Laravel commands
            docker exec -u www-data lengofy-app composer install --no-dev --optimize-autoloader
            
            # Run migrations (--force to run in production)
            docker exec -u www-data lengofy-app php artisan migrate --force
            
            # Only run seeding if explicitly requested
            if [ "${{ github.event.inputs.seed }}" = "true" ]; then
              docker exec -u www-data lengofy-app php artisan db:seed --force
              echo "Database seeding completed"
            fi
            
            # Cache everything
            docker exec -u www-data lengofy-app php artisan config:cache
            docker exec -u www-data lengofy-app php artisan route:cache
            docker exec -u www-data lengofy-app php artisan view:cache
            docker exec -u www-data lengofy-app php artisan storage:link
