diff --git a/bun.lockb b/bun.lockb
index cd9984c..556df44 100755
Binary files a/bun.lockb and b/bun.lockb differ
diff --git a/database/seeders/DatabaseSeeder.php b/database/seeders/DatabaseSeeder.php
index d01a0ef..82d6dd9 100644
--- a/database/seeders/DatabaseSeeder.php
+++ b/database/seeders/DatabaseSeeder.php
@@ -3,6 +3,10 @@
 namespace Database\Seeders;
 
 use App\Models\User;
+use Database\Seeders\GermanWordSeeder;
+use Database\Seeders\LanguageSeeder;
+use Database\Seeders\LanguagePairSeeder;
+use Database\Seeders\NounSeeder;
 // use Illuminate\Database\Console\Seeds\WithoutModelEvents;
 use Illuminate\Database\Seeder;
 
@@ -19,5 +23,11 @@ public function run(): void
             'name' => 'Test User',
             'email' => 'test@example.com',
         ]);
+
+        $this->call([
+            LanguageSeeder::class,
+            LanguagePairSeeder::class,
+            NounSeeder::class,
+        ]);
     }
 }
diff --git a/package.json b/package.json
index a5a4e8b..5cc9bcd 100644
--- a/package.json
+++ b/package.json
@@ -23,5 +23,9 @@
         "tailwindcss": "^3.2.1",
         "typescript": "^5.0.2",
         "vite": "^5.0"
+    },
+    "dependencies": {
+        "laravel-echo": "^1.17.0",
+        "pusher-js": "^8.4.0-rc2"
     }
 }
diff --git a/resources/js/bootstrap.ts b/resources/js/bootstrap.ts
index 5f1390b..76453fa 100644
--- a/resources/js/bootstrap.ts
+++ b/resources/js/bootstrap.ts
@@ -1,4 +1,44 @@
+/**
+ * We'll load the axios HTTP library which allows us to easily issue requests
+ * to our Laravel back-end. This library automatically handles sending the
+ * CSRF token as a header based on the value of the "XSRF" token cookie.
+ */
+
 import axios from 'axios';
+import Echo from 'laravel-echo';
+import Pusher from 'pusher-js';
+
 window.axios = axios;
 
 window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
+
+/**
+ * Echo exposes an expressive API for subscribing to channels and listening
+ * for events that are broadcast by Laravel. Echo and event broadcasting
+ * allows your team to easily build robust real-time web applications.
+ */
+
+declare global {
+    interface Window {
+        axios: typeof axios;
+        Pusher: typeof Pusher;
+        Echo: Echo;
+        Laravel: {
+            pusherKey: string;
+            pusherCluster: string;
+        };
+    }
+}
+
+window.Pusher = Pusher;
+
+window.Echo = new Echo({
+    broadcaster: 'pusher',
+    key: import.meta.env.VITE_PUSHER_APP_KEY,
+    cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',
+    wsHost: import.meta.env.VITE_PUSHER_HOST ? import.meta.env.VITE_PUSHER_HOST : `ws-${import.meta.env.VITE_PUSHER_APP_CLUSTER}.pusher.com`,
+    wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,
+    wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,
+    forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',
+    enabledTransports: ['ws', 'wss'],
+});
diff --git a/routes/web.php b/routes/web.php
index 067c4f5..753be01 100644
--- a/routes/web.php
+++ b/routes/web.php
@@ -1,6 +1,7 @@
 <?php
 
 use App\Http\Controllers\ProfileController;
+use App\Http\Controllers\GameController;
 use Illuminate\Foundation\Application;
 use Illuminate\Support\Facades\Route;
 use Inertia\Inertia;
@@ -24,4 +25,12 @@
     Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
 });
 
+// Game routes
+Route::get('/games', [GameController::class, 'lobby'])->name('games.lobby');
+Route::post('/games', [GameController::class, 'create'])->name('games.create');
+Route::get('/games/{game}', [GameController::class, 'show'])->name('games.show');
+Route::post('/games/{game}/join', [GameController::class, 'join'])->name('games.join');
+Route::post('/games/{game}/ready', [GameController::class, 'ready'])->name('games.ready');
+Route::post('/games/{game}/submit', [GameController::class, 'submit'])->name('games.submit');
+
 require __DIR__.'/auth.php';
